)
#i couldn't find about half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government, maryland port administration)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find about half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government, maryland port administration)
View(maryland_jobs)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find about half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government, maryland port administration)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find about half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government, maryland port administration)
View(maryland_jobs)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find a little less than half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government, maryland port administration)
#calculate the projected median income of maryland port administration workers
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
view(mpa_jobs)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find a little less than half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government, maryland port administration)
#calculate the projected median income of maryland port administration workers
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
maryland_port_median_income <- median(mpa_jobs$a_mean)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs,so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
#view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
View(updated_baltimore_jobs)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs,so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
#view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
#view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs,so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
#view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
#view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
view(maryland_port_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders", "maryland_port_administration"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs,so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders","maryland_port_administration"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
#view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
#view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
view(maryland_port_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders", "maryland_port_administration"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs,so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders","maryland_port_administration"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
#view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
#view(maryland_median_income)
#the median income of all maryland jobs is 47,360
baltimore_median_income <- median(inner_join_table$a_mean)
view(baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders", "maryland_port_administration"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs,so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders","maryland_port_administration"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
#view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
baltimore_median_income <- median(inner_join_table$a_mean)
view(baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders", "maryland_port_administration"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs, so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders","maryland_port_administration"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#what is the median income of the baltimore jobs related to the port?
baltimore_median_income <- median(inner_join_table$a_mean)
view(baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders", "maryland_port_administration"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs, so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders","maryland_port_administration"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#what is the median income of the baltimore jobs related to the port?
baltimore_median_income <- median(inner_join_table$a_mean)
view(baltimore_median_income)
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find a little less than half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government) this causes a great skew within the data because government jobs pay much higher
#calculate the projected median income of maryland port administration workers
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find a little less than half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government) this causes a great skew within the data because government jobs pay much higher
#calculate the projected median income of maryland port administration workers
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
maryland_port_median_income <- median(mpa_jobs$a_mean)
view(maryland_port_median_income)
View(mpa_jobs)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find a little less than half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government) this causes a great skew within the data because government jobs pay much higher
#calculate the projected median income of maryland port administration workers
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
maryland_port_median_income <- median(mpa_jobs$a_mean)
view(maryland_port_median_income)
# Check the number of rows in mpa_jobs
num_rows_mpa <- nrow(mpa_jobs)
# Check for valid values in the a_mean column of mpa_jobs
valid_values_mpa <- mpa_jobs$a_mean[!is.na(mpa_jobs$a_mean)]
# Print the results
print(num_rows_mpa)
print(valid_values_mpa)
#now i will caluclate the median of maryland port administration jobs by creating a new dataset for mpa jobs
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
#filter out commas from the values
mpa_jobs$a_mean <- as.numeric(gsub(",", "", mpa_jobs$a_mean))
maryland_port_median_income <- median(mpa_jobs$a_mean)
view(maryland_port_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs, so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#what is the median income of the baltimore jobs related to the port?
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs, so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#what is the median income of the baltimore jobs related to the port?
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
#use mutate to create a new column called occ_title_2 and change the job names from maryland job data to match names of jobs in  baltimore port
maryland_jobs <- maryland_jobs %>%
mutate(
occ_title_2 = case_when(
occ_title == "Railroad Brake, Signal, and Switch Operatorand Locomotive Firers"   ~ "rail",
occ_title == "Heavy and Tractor-Trailer Truck Drivers"   ~ "truck",
occ_title == "Captains, Mates, and Pilotof Water Vessels"   ~ "pilots",
occ_title == "Construction Laborers"   ~ "maritime_services_construction",
occ_title == "Helpers, Construction Trades, All Other"   ~ "warehouse",
occ_title == "Shipping, Receiving, and Inventory Clerks"   ~ "dependent_shippers_consignees",
occ_title == "Laborerand Freight, Stock, and Material Movers, Hand"   ~ "freight_forwarders",
occ_title == "Operating Engineerand Other Construction Equipment Operators" ~ "maryland_port_administration",
occ_title == "Electrical and ElectronicInstallerand Repairers, Transportation Equipment" ~ "maryland_port_administration",
occ_title == "Plumbers, Pipefitters, and Steamfitters" ~ "maryland_port_administration",
occ_title == "First-Line Supervisorof Construction Tradeand Extraction Workers" ~ "maryland_port_administration",
TRUE                 ~ occ_title
)
#i couldn't find a little less than half of the names of baltimore port jobs and properly match to maryland jobs just yet (including terminal, ILA/dockworkers, tug assist/barge, government) this causes a great skew within the data because government jobs pay much higher
#now i will caluclate the median of maryland port administration jobs by creating a new dataset for mpa jobs
mpa_jobs <- maryland_jobs %>%
filter(occ_title_2 == "maryland_port_administration")
#filter out commas from the values
mpa_jobs$a_mean <- as.numeric(gsub(",", "", mpa_jobs$a_mean))
maryland_port_median_income <- median(mpa_jobs$a_mean)
view(maryland_port_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs, so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
view(maryland_median_income)
#the median income of all maryland jobs is 47,360
#what is the median income of the baltimore jobs related to the port?
#baltimore_median_income <- median(inner_join_table$a_mean)
#view(baltimore_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
view(inner_join_table)
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
inner_join_table$a_mean <- as.numeric(gsub(",", "", mpa_jobs$a_mean))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
inner_join_table$a_mean <- as.numeric(gsub(",", "", inner_join_table$a_mean))
view(inner_join_table)
#creating a dataset from the maryland jobs database with just these new occupations
updated_maryland_jobs <- maryland_jobs %>%
select(occ_title_2, a_mean) %>%
filter(occ_title_2 %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#create a new dataset with the updated baltimore port jobs that can match the maryland jobs, so that i can do an inner join between the two
updated_baltimore_jobs <- baltimore_port_jobs %>%
select(job_types, total_direct_jobs) %>%
filter(job_types %in% c("rail","truck","pilots","maritime_services_construction", "warehouse", "dependent_shippers_consignees", "freight_forwarders"))
#inner join the updated maryland wages and job amounts
inner_join_table <- updated_maryland_jobs %>%
inner_join(updated_baltimore_jobs, by = c("occ_title_2" = "job_types"))
inner_join_table$a_mean <- as.numeric(gsub(",", "", inner_join_table$a_mean))
view(inner_join_table)
#what is the median income of all maryland jobs?
maryland_median_income <- median(maryland_jobs$a_mean)
#view(maryland_median_income)
#the median income of all maryland jobs is 47,360
updated_baltimore_median_income <- median(c(inner_join_table$a_mean, maryland_port_median_income))
view(updated_baltimore_median_income)
#loading libraries
library(rvest)
library(tidyverse)
library(janitor)
library(dplyr)
library(htmltools)
#import county data
port_counties <- read_csv("port_counties.csv") %>%
clean_names()
#delete the total row and county row
port_counties <- slice(port_counties, -c(2,9))
#make counties lowercase
port_counties$jurisdiction <- tolower(gsub(" ", "_", port_counties$jurisdiction))
view(port_counties)
<div class="flourish-embed flourish-map" data-src="visualisation/17785537"><script src="https://public.flourish.studio/resources/embed.js"></script></div>
#import baltimore jobs related to the port, rename the jobs column and then take out unnecessary rows/columns
baltimore_port_jobs <- read_csv("baltimore_port_jobs.csv") %>%
clean_names() %>%
#take out unnecessary rows/columns
rename(job_types = 1) %>%
subset(select = -c(5))
baltimore_port_jobs <- slice(baltimore_port_jobs, -c(1,4,16,17))
#clean the names under the job_titles column
baltimore_port_jobs$job_types <- tolower(gsub("[ /]", "_", baltimore_port_jobs$job_types))
#import the mean incomes of different jobs in maryland
maryland_jobs <- read_csv("maryland_jobs.csv") %>%
#clean the dataset names
clean_names() %>%
rename(state = 1) %>%
#take out columns so that it just displays annual mean income
subset(select = -c(2,4,5,7,8))
#filter out all rows where there is a null value for annual mean data
sum(is.na(maryland_jobs$a_mean))
maryland_jobs <- maryland_jobs %>%
filter(a_mean != "#" & a_mean != "*")
View(baltimore_port_jobs)
View(bmore_port_jobs)
View(bmore_commodities)
View(port_counties)
#loading libraries
library(rvest)
library(tidyverse)
library(janitor)
library(dplyr)
